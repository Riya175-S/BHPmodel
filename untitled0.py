# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12a3elftLQNDt3uOzB2TFb_k20raMqfvw
"""

print("This is a python program")

import pandas as pd
import numpy as np
from sklearn import linear_model
from sklearn.model_selection import train_test_split

# loading boston houing data
from sklearn.datasets import load_boston
boston = load_boston()
print (boston)

# Transforms data set into data frame
# data = x part, independent variables
# feature name = column names
# Target = price of house / the target variables/

df_x = pd.DataFrame(boston.data, columns=boston.feature_names)
df_y = pd.DataFrame(boston.target)

#.data : dot notation. boston - object;

df_x.describe()

reg = linear_model.LinearRegression()

x_train, x_test, y_train, y_test = train_test_split(df_x, df_y,test_size =0.33, random_state =42)
# test size : 0.33 = 33 % testing
# training : 67%

reg.fit(x_train, y_train)
#training model with our training data

print(reg.coef_)
# f(x) = y
# f(x) = mx + b, so here m is coef
# f(x,a) = mx + na + c , so here m, n both are coef

# printing prediction on test data
y_pred = reg.predict(x_test)
print(y_pred)

# printing the actual values 
print(y_test)

# now you can cross check the values one by one and  see the accuracy

#check the model prediction / accuracy using mean squared root (MSE)
print(np.mean((y_pred)- y_test)**2)

# checking model prediction
from sklearn.metrics import mean_squared_error
print( mean_squared_error(y_test, y_pred))